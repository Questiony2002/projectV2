<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg width="800" height="650" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <style>
    @font-face { font-family: "SimSun"; src: local("SimSun"); }
    @font-face { font-family: "Times New Roman"; src: local("Times New Roman"); }
    .title { font-family: "SimSun"; font-size: 10.5px; font-weight: bold; text-anchor: middle; }
    .class-title { font-family: "SimSun"; font-size: 10.5px; font-weight: bold; text-anchor: middle; }
    .class-text { font-family: "SimSun"; font-size: 10.5px; text-anchor: start; }
    .method-text { font-family: "SimSun"; font-size: 10.5px; text-anchor: start; }
    .relationship-text { font-family: "SimSun"; font-size: 10.5px; text-anchor: middle; }
    .class-box { fill: #ffffff; stroke: #000000; stroke-width: 1.5; }
    .entity-class { fill: #fff; stroke: #000; stroke-width: 1.5; }
    .controller-class { fill: #fff; stroke: #000; stroke-width: 1.5; }
    .service-class { fill: #fff; stroke: #000; stroke-width: 1.5; }
    .repo-class { fill: #fff; stroke: #000; stroke-width: 1.5; }
    .adapter-class { fill: #fff; stroke: #000; stroke-width: 1.5; }
    .fragment-class { fill: #fff; stroke: #000; stroke-width: 1.5; }
    .line { stroke: #000000; stroke-width: 1.5; fill: none; }
    .dashed-line { stroke: #000000; stroke-width: 1.5; fill: none; stroke-dasharray: 5,3; }
    .arrow { fill: #000000; }
    .diamond { fill: white; stroke: #000000; stroke-width: 1.5; }
  </style>
  
  <rect width="100%" height="100%" fill="white" />
  
  <!-- News实体类 -->
  <rect x="50" y="60" width="200" height="150" rx="5" ry="5" class="entity-class" />
  <line x1="50" y1="85" x2="250" y2="85" class="line" />
  <line x1="50" y1="160" x2="250" y2="160" class="line" />
  <text x="150" y="75" class="class-title">News</text>
  <text x="60" y="100" class="class-text">- id: Long</text>
  <text x="60" y="115" class="class-text">- title: String</text>
  <text x="60" y="130" class="class-text">- content: String</text>
  <text x="60" y="145" class="class-text">- imageUrl: String</text>
  <text x="60" y="160" class="class-text">- originalUrl: String</text>
  <text x="60" y="175" class="method-text">+ getters/setters</text>
  <text x="60" y="190" class="method-text">+ News()</text>
  
  <!-- NewsDTO类 -->
  <rect x="50" y="350" width="200" height="120" rx="5" ry="5" class="entity-class" />
  <line x1="50" y1="375" x2="250" y2="375" class="line" />
  <line x1="50" y1="425" x2="250" y2="425" class="line" />
  <text x="150" y="365" class="class-title">NewsDTO</text>
  <text x="60" y="390" class="class-text">- id: Long</text>
  <text x="60" y="405" class="class-text">- title: String</text>
  <text x="60" y="420" class="class-text">- summary: String</text>
  <text x="60" y="440" class="method-text">+ getters/setters</text>
  <text x="60" y="455" class="method-text">+ NewsDTO()</text>
  
  <!-- NewsController类 -->
  <rect x="300" y="60" width="230" height="120" rx="5" ry="5" class="controller-class" />
  <line x1="300" y1="85" x2="530" y2="85" class="line" />
  <line x1="300" y1="105" x2="530" y2="105" class="line" />
  <text x="415" y="75" class="class-title">NewsController</text>
  <text x="310" y="100" class="class-text">- newsService: NewsService</text>
  <text x="310" y="120" class="method-text">+ getNewsList(): List&lt;NewsDTO&gt;</text>
  <text x="310" y="135" class="method-text">+ getNewsById(Long): NewsDTO</text>
  <text x="310" y="150" class="method-text">+ refreshNews(): ApiResponse</text>
  <text x="310" y="165" class="method-text">+ searchNews(String): List&lt;NewsDTO&gt;</text>
  
  <!-- NewsService接口 -->
  <rect x="300" y="210" width="230" height="110" rx="5" ry="5" class="service-class" />
  <line x1="300" y1="235" x2="530" y2="235" class="line" />
  <line x1="300" y1="255" x2="530" y2="255" class="line" />
  <text x="415" y="225" class="class-title">NewsService</text>
  <text x="310" y="250" class="class-text">(interface)</text>
  <text x="310" y="270" class="method-text">+ getNewsList(): List&lt;NewsDTO&gt;</text>
  <text x="310" y="285" class="method-text">+ getNewsById(Long): Optional&lt;NewsDTO&gt;</text>
  <text x="310" y="300" class="method-text">+ refreshNews(): boolean</text>
  <text x="310" y="315" class="method-text">+ searchNews(String): List&lt;NewsDTO&gt;</text>
  
  <!-- NewsServiceImpl类 -->
  <rect x="300" y="390" width="230" height="150" rx="5" ry="5" class="service-class" />
  <line x1="300" y1="415" x2="530" y2="415" class="line" />
  <line x1="300" y1="455" x2="530" y2="455" class="line" />
  <text x="415" y="405" class="class-title">NewsServiceImpl</text>
  <text x="310" y="430" class="class-text">- newsRepository: NewsRepository</text>
  <text x="310" y="445" class="class-text">- newsCrawler: NewsCrawler</text>
  <text x="310" y="470" class="method-text">+ getNewsList(): List&lt;NewsDTO&gt;</text>
  <text x="310" y="485" class="method-text">+ getNewsById(Long): Optional&lt;NewsDTO&gt;</text>
  <text x="310" y="500" class="method-text">+ refreshNews(): boolean</text>
  <text x="310" y="515" class="method-text">+ searchNews(String): List&lt;NewsDTO&gt;</text>
  <text x="310" y="530" class="method-text">- convertToDTO(News): NewsDTO</text>
  
  <!-- NewsRepository接口 -->
  <rect x="580" y="390" width="200" height="140" rx="5" ry="5" class="repo-class" />
  <line x1="580" y1="415" x2="780" y2="415" class="line" />
  <line x1="580" y1="445" x2="780" y2="445" class="line" />
  <text x="680" y="405" class="class-title">NewsRepository</text>
  <text x="590" y="430" class="class-text">(extends JpaRepository)</text>
  <text x="590" y="460" class="method-text">+ findByTitle(String): Optional&lt;News&gt;</text>
  <text x="590" y="475" class="method-text">+ findAllByOrderByIdDesc(): List&lt;News&gt;</text>
  <text x="590" y="490" class="method-text">+ existsByTitle(String): boolean</text>
  <text x="590" y="505" class="method-text">+ findByTitleContaining(String): List&lt;News&gt;</text>
  
  <!-- NewsCrawler类 -->
  <rect x="580" y="210" width="200" height="110" rx="5" ry="5" class="service-class" />
  <line x1="580" y1="235" x2="780" y2="235" class="line" />
  <line x1="580" y1="275" x2="780" y2="275" class="line" />
  <text x="680" y="225" class="class-title">NewsCrawler</text>
  <text x="590" y="250" class="class-text">- TARGET_URLS: List&lt;String&gt;</text>
  <text x="590" y="265" class="class-text">- newsRepository: NewsRepository</text>
  <text x="590" y="290" class="method-text">+ crawlNews(): List&lt;News&gt;</text>
  <text x="590" y="305" class="method-text">- parseNewsPage(String): News</text>
  <text x="590" y="320" class="method-text">- saveNews(News): boolean</text>
  
  <!-- NewsFragment类 -->
  <rect x="50" y="500" width="200" height="130" rx="5" ry="5" class="fragment-class" />
  <line x1="50" y1="525" x2="250" y2="525" class="line" />
  <line x1="50" y1="560" x2="250" y2="560" class="line" />
  <text x="150" y="515" class="class-title">NewsFragment</text>
  <text x="60" y="540" class="class-text">- newsAdapter: NewsAdapter</text>
  <text x="60" y="555" class="class-text">- newsViewModel: NewsViewModel</text>
  <text x="60" y="575" class="method-text">+ onCreateView(...): View</text>
  <text x="60" y="590" class="method-text">+ onViewCreated(...): void</text>
  <text x="60" y="605" class="method-text">+ refreshNews(): void</text>
  <text x="60" y="620" class="method-text">+ searchNews(String): void</text>
  
  <!-- NewsAdapter类 -->
  <rect x="50" y="230" width="200" height="90" rx="5" ry="5" class="adapter-class" />
  <line x1="50" y1="255" x2="250" y2="255" class="line" />
  <text x="150" y="245" class="class-title">NewsAdapter</text>
  <text x="60" y="270" class="class-text">- newsList: List&lt;NewsDTO&gt;</text>
  <text x="60" y="285" class="method-text">+ onBindViewHolder(...): void</text>
  <text x="60" y="300" class="method-text">+ updateNewsList(List&lt;NewsDTO&gt;): void</text>
  
  <!-- 类之间的关系 - 调整了连接线以减少交叉 -->
  <!-- Controller使用Service -->
  <path d="M415,180 L415,210" stroke="#000" stroke-width="1.5" marker-end="url(#uses)" fill="none"/>
  <text x="430" y="195" class="relationship-text">Uses</text>
  
  <!-- ServiceImpl实现Service接口 -->
  <path d="M415,320 L415,390" stroke="#000" stroke-width="1.5" marker-end="url(#implements)" fill="none"/>
  <text x="430" y="355" class="relationship-text">Implements</text>
  
  <!-- ServiceImpl使用Repository -->
  <path d="M530,440 L580,440" stroke="#000" stroke-width="1.5" marker-end="url(#uses)" fill="none"/>
  <text x="550" y="430" class="relationship-text">Uses</text>
  
  <!-- ServiceImpl使用NewsCrawler -->
  <path d="M415,390 L415,370 L680,370 L680,320" stroke="#000" stroke-width="1.5" marker-end="url(#uses)" fill="none"/>
  <text x="500" y="360" class="relationship-text">Uses</text>
  
  <!-- NewsRepository操作News实体 -->
  <path d="M680,390 L680,180 L250,180" stroke="#000" stroke-width="1.5" marker-end="url(#uses)" fill="none"/>
  <text x="430" y="170" class="relationship-text">Operates</text>
  
  <!-- NewsCrawler创建News -->
  <path d="M580,260 L530,260 L530,140 L250,140" stroke="#000" stroke-width="1.5" marker-end="url(#uses)" fill="none"/>
  <text x="400" y="130" class="relationship-text">Creates</text>
  
  <!-- News与NewsDTO的关系 -->
  <path d="M150,210 L150,350" stroke="#000" stroke-width="1.5" marker-end="url(#transforms)" fill="none"/>
  <text x="160" y="280" class="relationship-text">Transforms</text>
  
  <!-- NewsFragment使用NewsAdapter -->
  <path d="M150,500 L150,320" stroke="#000" stroke-width="1.5" marker-end="url(#uses)" fill="none"/>
  <text x="160" y="400" class="relationship-text">Uses</text>
  
  <defs>
    <marker id="implements" viewBox="0 0 10 10" refX="9" refY="5" markerWidth="8" markerHeight="8" orient="auto">
      <polygon points="0,0 10,5 0,10" fill="white" stroke="#000" stroke-width="1"/>
    </marker>
    <marker id="uses" viewBox="0 0 10 10" refX="9" refY="5" markerWidth="8" markerHeight="8" orient="auto">
      <polygon points="0,0 10,5 0,10" fill="#000"/>
    </marker>
    <marker id="transforms" viewBox="0 0 10 10" refX="9" refY="5" markerWidth="8" markerHeight="8" orient="auto">
      <polygon points="0,0 10,5 0,10" fill="#000"/>
    </marker>
  </defs>
</svg> 